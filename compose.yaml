services:
    php:
        build:
            context: .
            target: local
            args:
                UID: 1000
                USER: local
        restart: on-failure
        environment:
            PHP_IDE_CONFIG: "serverName=dev"
        volumes:
            - ./:/app:consistent
            - .docker/development/php/php-override.ini:/usr/local/etc/php/conf.d/php-override.ini
            - user_home:/home/local
        networks:
            net:
        extra_hosts:
            - host.docker.internal:host-gateway
        tty: true

    postgres:
        image: postgres:16.4-alpine3.20
        environment:
            POSTGRES_USER: demo
            POSTGRES_PASSWORD: demo
        volumes:
            - postgres_db:/var/lib/postgresql/data
            - .docker/development/postgresql/init.sql:/docker-entrypoint-initdb.d/10-init.sql
        networks:
            net:
        ports:
            - "5432:5432"

    rabbitmq:
        image: rabbitmq:3.13.7-management
        restart: on-failure
        environment:
            RABBITMQ_DEFAULT_USER: demo
            RABBITMQ_DEFAULT_PASS: demo
            RABBITMQ_NODENAME: demo@rabbitmq
        ports:
            - "15672:15672"
        volumes:
            - rabbitmq_mnesia:/var/lib/rabbitmq/mnesia
        networks:
            net:

    kafka:
        image: apache/kafka:3.8.0
        restart: on-failure
    #    ports:
    #        - 9094:9094
        volumes:
            - kafka_data:/var/lib/kafka/data
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT'
            KAFKA_ADVERTISED_LISTENERS: 'INSIDE://kafka:9092,OUTSIDE://localhost:9094'
            KAFKA_PROCESS_ROLES: 'broker,controller'
            KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
            KAFKA_LISTENERS: 'CONTROLLER://:29093,INSIDE://:9092,OUTSIDE://:9094'
            KAFKA_INTER_BROKER_LISTENER_NAME: 'INSIDE'
            KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
            CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_LOG_DIRS: '/var/lib/kafka/data'
        networks:
            net:

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        restart: on-failure
        depends_on:
            - kafka
            - schema-registry
        environment:
            DYNAMIC_CONFIG_ENABLED: 'true'
        ports:
            - 8080:8080
        volumes:
            - ./.docker/development/kafka-ui/config.yaml:/etc/kafkaui/dynamic_config.yaml
        networks:
            net:

    schema-registry:
        image: confluentinc/cp-schema-registry
        restart: on-failure
        depends_on:
            - kafka
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
            SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
            SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
            SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'
        ports:
            - 8085:8085
        networks:
            net:

volumes:
    user_home:
    postgres_db:
    kafka_data:
    rabbitmq_mnesia:

networks:
    net:
        name: developer
